namespace TerrainGenerator
{
    internal class Program
    {
        class Gridblock
        {
            public int ID;
            public int State;
            public string Contains;


        }



        static void Main(string[] args)
        {
            Random random = new Random();
            var grid = new Gridblock[70, 390];
            //Backround Mountains
            //int height = 30;
            //for (int x = 0; x < grid.GetLength(1); x++)
            //{
            //    height += random.Next(-1, 2);
            //    int Debth = random.Next(6, 10);



            //    while (Debth > 0 )
            //    {
            //        grid[height + Debth, x] = new Gridblock { ID = 1, State = 0, Contains = "Stone" };
            //        Debth--;
            //    }



            //}

            //Makes Terrain and hills
            for (int x = 0;x < grid.GetLength(1);)
            {
                if (random.Next(0, 2) == 0)
                {
                    grid[10 - random.Next(1,3)*3, x] = new Gridblock { ID = 1, State = 0, Contains = "Hill" };
                    
                }
                else
                {
                    grid[15 + random.Next(1, 3)*3, x] = new Gridblock { ID = 1, State = 0, Contains = "Down" };
                }

                
                
                x += random.Next(3, 30);
            }
            //Add Biomes
            for (int x = random.Next(30, 520); x < grid.GetLength(1);)
            {
                int biome = random.Next(0, 7);
                if (biome == 0)
                    grid[30,x] = new Gridblock { ID = 1, State = 0, Contains = "Forest" };
                else if (biome == 1)
                    grid[40,x] = new Gridblock { ID = 1, State = 0, Contains = "Plains" };
                else if (biome == 2)
                    grid[50,x] = new Gridblock { ID = 1, State = 0, Contains = "Swamp" };
                else if (biome == 3)
                    grid[60,x] = new Gridblock { ID = 1, State = 0, Contains = "Jungle" };
                else if (biome == 4)
                    grid[70,x] = new Gridblock { ID = 1, State = 0, Contains = "Tundra" };
                else if (biome == 5)
                    grid[80,x] = new Gridblock { ID = 1, State = 0, Contains = "Snow" };
                
              
                x += random.Next(10,70);
            }
            //MakesCaves





            //Render the grid
            for (int i = 0; i < grid.GetLength(0); i++)
            {
                Console.WriteLine();
                for (int j = 0; j < grid.GetLength(1); j++)
                {
                    if (grid[i, j] == null)
                    {
                        Console.Write("  ");
                    }

                    else if (grid[i, j].ID == 1)
                    {
                        Console.Write(grid[i, j].Contains);
                    }

                }
            }
        }
    }
}


using System.Numerics;

namespace TerrainGenerator
{
    internal class Program
    {
        class Gridblock
        {
            public int ID;
            public int State;
            public string Contains;


        }
        static void Square(Vector4 size, Gridblock[,] grid)
        {
            for(int x = (int)size.X;x<(int)size.Z;x++)
            {
                for (int y = (int)size.Y; y < (int)size.W; y++)
                {
                    grid[y, x] = new Gridblock() { ID = 1, State = 0, Contains = "██" };
                }
            }
        }
        static void Square(Vector2 size,Vector2 Pos, Gridblock[,] grid)
        {
            Square(new Vector4(Pos.X, Pos.Y, Pos.X + size.X, Pos.Y + size.Y), grid);
        }
        static void Sphere(float radius, int x,int y, Gridblock[,] grid)
        {
            int wh  
        }

        static void Main(string[] args)
        {
            Random random = new Random();
            var grid = new Gridblock[70, 390];
            

            



            //Render the grid
            for (int i = 0; i < grid.GetLength(0); i++)
            {
                Console.WriteLine();
                for (int j = 0; j < grid.GetLength(1); j++)
                {
                    if (grid[i, j] == null)
                    {
                        Console.Write("  ");
                    }

                    else if (grid[i, j].ID == 1)
                    {
                        Console.Write(grid[i, j].Contains);
                    }

                }
            }
        }
    }
}
